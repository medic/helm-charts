{{- if .Values.couchdb.nouveau_enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cht.service: nouveau
  name: cht-couchdb-nouveau
spec:
  replicas: 1
  selector:
    matchLabels:
      cht.service: nouveau
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cht.service: nouveau
    spec:
      securityContext:
        runAsUser: 0  # Run as root
        fsGroup: 0    # Set fsGroup to root
      tolerations:
        - key: {{ .Values.toleration.key }}
          operator: {{ .Values.toleration.operator }}
          value: {{ .Values.toleration.value | quote }}
          effect: {{ .Values.toleration.effect }}
    {{- if hasKey .Values "nodes" }}
      {{- if hasKey .Values.nodes "single_node_deploy" }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.nodes.single_node_deploy }}
      {{- end }}
    {{- end }}
      containers:
        - name: cht-couchdb-nouveau
          image: {{ .Values.upstream_servers.docker_registry }}/cht-couchdb-nouveau:{{ .Values.cht_image_tag }}
          {{ if eq .Values.cache_images false}}imagePullPolicy: Always{{ end }}
          ports:
            - containerPort: 5987
          resources: {}
          {{- if eq (toString .Values.cluster_type) "k3s-k3d" }}
          volumeMounts:
            - mountPath: /data/nouveau
              name: local-volume
              subPath: data
          {{- else }}
          volumeMounts:
            - mountPath: /data/nouveau
              name: couchdb-nouveau-claim0
              subPath: data
          {{- end }}
      restartPolicy: Always
      {{- if eq (toString .Values.cluster_type) "k3s-k3d" }}
      volumes:
        - name: local-volume
          hostPath:
            path: {{ index .Values.local_storage "preExistingDiskPath-1" }}
      {{- else }}
      volumes:
        - name: couchdb-nouveau-claim0
          persistentVolumeClaim:
            claimName: couchdb-nouveau-claim0
      {{- end }}
status: {}
{{- end }}
