project_name: "<your-project-name>" # Example: mrjones-dev
namespace: "<your-namespace>" # Example: mrjones-dev
chtversion: 4.10.0
# cht_image_tag: 4.1.1-4.1.1 â€” This is auto-filled by the deploy script. Do not uncomment manually.

# When set to true, images are cached and won't be pulled again. Set to false for development environments.
cache_images: true

# Use the default upstream servers unless you have a specific override.
upstream_servers:
  docker_registry: "public.ecr.aws/medic"
  builds_url: "https://staging.dev.medicmobile.org/_couch/builds_4"

upgrade_service:
  tag: 0.32

# CouchDB Configuration
couchdb:
  password: "<password-value>" # Avoid using special characters that are not URL-safe
  secret: "f9053a0a-ef77-4be3-994d-87d6732600fd" # For production, generate using uuidgen
  user: "medic"
  uuid: "7300115e-1a98-4607-a37c-50e0c9913767" # For production, generate using uuidgen
  clusteredCouch_enabled: false
  couchdb_node_storage_size: 100Mi

  # Set to true to disable the internal CouchDB deployment and use an external CouchDB instance
  useExternal: false

  # Connection details for the external CouchDB instance (used when useExternal is true)
  external:
    host: ""       # Example: couchdb.example.com
    port: 5984
    username: ""
    password: ""

clusteredCouch:
  noOfCouchDBNodes: 3

# Tolerations for CouchDB pods; avoid changing unless necessary
toleration:
  key: "dev-couchdb-only"
  operator: "Equal"
  value: "true"
  effect: "NoSchedule"

ingress:
  annotations:
    groupname: "dev-cht-alb"
    tags: "Environment=dev,Team=QA"
    certificate: "arn:aws:iam::720541322708:server-certificate/2024-wildcard-dev-medicmobile-org-chain"
  host: "<subdomain>.dev.medicmobile.org"
  hosted_zone_id: "Z3304WUAJTCM7P"
  load_balancer: "dualstack.k8s-devchtalb-3eb0781cbb-694321496.eu-west-2.elb.amazonaws.com"

environment: "remote"
cluster_type: "eks"
cert_source: "eks-medic"
certificate_crt_file_path: "/path/to/certificate.crt"
certificate_key_file_path: "/path/to/certificate.key"

nodes:
  node-1: ""
  node-2: ""
  node-3: ""

# vSphere settings, only applicable if k3s_use_vSphere_storage_class is set to true
k3s_use_vSphere_storage_class: "false"
vSphere:
  datastoreName: "DatastoreName"
  diskPath: "path/to/disk"

# Pre-existing CouchDB data configuration
couchdb_data:
  preExistingDataAvailable: "false"
  dataPathOnDiskForCouchDB: "data"
  partition: "0"

# Pre-existing local disk paths, used for k3s-k3d clusters
local_storage:
  preExistingDiskPath-1: "/var/lib/couchdb1"
  preExistingDiskPath-2: "/var/lib/couchdb2"
  preExistingDiskPath-3: "/var/lib/couchdb3"

# Pre-existing EBS volume IDs, used for EKS clusters
ebs:
  preExistingEBSVolumeID-1: "vol-0123456789abcdefg"
  preExistingEBSVolumeID-2: "vol-0123456789abcdefg"
  preExistingEBSVolumeID-3: "vol-0123456789abcdefg"
  preExistingEBSVolumeSize: "100Gi"
